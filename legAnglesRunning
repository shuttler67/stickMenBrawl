120  90
90   130
60   155
40   155
60   155
90   175
130  120
155  90
155  60
155  40
175  90

 local b = a.links[1].p2
    local vec1 = a.pos - b.pos
    
    local angle = math.atan2(normal % vec1, normal * vec1) --"%" = cross product
    
    if self.footmina > self.footmaxa then
        if angle <= self.footmaxa or angle >= self.footmina then return end
    else
        if angle <= self.footmaxa and angle >= self.footmina then return end
    end
    
    local diff1 = angle - self.footmina
    
    if diff1 <= -math.pi then
        diff1 = diff1 + 2 * math.pi
    elseif diff1 >= math.pi then
        diff1 = diff1 - 2 * math.pi
    end
    
    local diff2 = angle - self.footmaxa
        
    if diff2 <= -math.pi then
        diff2 = diff2 + 2 * math.pi
    elseif diff2 >= math.pi then
        diff2 = diff2 - 2 * math.pi
    end
    
    local diff = math.abs(diff1) < math.abs(diff2) and diff1 or diff2

    diff = (diff /physics.getDeltaTime())


    --b.pos:rotateAround(a.pos, -diff)-- * imB / imTotal)
    --a.pos:rotateAround(b.pos, diff * imA / imTotal)
    --a:simulateFriction( 1, normal, penetration)
    
    if a == self.footLeft then
        self.legMuscleLeft:solve()
        --self.thighMuscleLeft:solve()
    else
        self.legMuscleRight:solve()
        --self.thighMuscleRight:solve()
    end